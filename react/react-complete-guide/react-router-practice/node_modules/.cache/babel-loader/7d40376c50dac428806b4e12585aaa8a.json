{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jeong\\\\Desktop\\\\Today-I-learned\\\\react\\\\react-router-practice\\\\src\\\\pages\\\\QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, Outlet } from \"react-router-dom\";\nimport { Fragment } from \"react\";\nimport HighlitedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetail = props => {\n  _s();\n\n  const params = useParams();\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getSingleQuote, true);\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlitedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetail, \"Us0ObKxxQHuZT9rleOR1FPD0tqc=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["C:/Users/Jeong/Desktop/Today-I-learned/react/react-router-practice/src/pages/QuoteDetail.js"],"names":["useParams","Outlet","Fragment","HighlitedQuote","useHttp","getSingleQuote","QuoteDetail","props","params","sendRequest","status","data","loadedQuote","error","quote","DUMMY_QUOTES","find","id","quoteId","text","author"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,kBAAlC;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,YAA/B;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AAEA,QAAM;AAAES,IAAAA,WAAF;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA,IAAI,EAAEC,WAA7B;AAA0CC,IAAAA;AAA1C,MAAoDT,OAAO,CAACC,cAAD,EAAiB,IAAjB,CAAjE;AAEA,QAAMS,KAAK,GAAGC,YAAY,CAACC,IAAb,CAAmBF,KAAD,IAAWA,KAAK,CAACG,EAAN,KAAaT,MAAM,CAACU,OAAjD,CAAd;;AAEA,MAAI,CAACJ,KAAL,EAAY;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAEA,KAAK,CAACK,IAA5B;AAAkC,MAAA,MAAM,EAAEL,KAAK,CAACM;AAAhD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAjBD;;GAAMd,W;UACWN,S,EAE2CI,O;;;KAHtDE,W;AAmBN,eAAeA,WAAf","sourcesContent":["import { useParams, Outlet } from \"react-router-dom\";\r\nimport { Fragment } from \"react\";\r\n\r\nimport HighlitedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\n\r\nconst QuoteDetail = (props) => {\r\n  const params = useParams();\r\n\r\n  const { sendRequest, status, data: loadedQuote, error } = useHttp(getSingleQuote, true);\r\n\r\n  const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\r\n\r\n  if (!quote) {\r\n    return <p>No quote found!</p>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <HighlitedQuote text={quote.text} author={quote.author} />\r\n      <Outlet />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n"]},"metadata":{},"sourceType":"module"}