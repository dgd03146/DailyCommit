{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jeong\\\\Desktop\\\\Today-I-learned\\\\react\\\\react-router-practice\\\\src\\\\pages\\\\QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, Outlet, Link } from \"react-router-dom\";\nimport { Fragment } from \"react\";\nimport HighlitedQuote from \"../components/quotes/HighlightedQuote\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"Bory\",\n  text: \"Learning React is fun!\"\n}, {\n  id: \"q2\",\n  author: \"Jeong\",\n  text: \"Learning React is great!\"\n}, {\n  id: \"q3\",\n  author: \"Max\",\n  text: \"Learning React is enjoyable!\"\n}];\n\nconst QuoteDetail = props => {\n  _s();\n\n  const params = useParams();\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlitedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(Link, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetail, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["C:/Users/Jeong/Desktop/Today-I-learned/react/react-router-practice/src/pages/QuoteDetail.js"],"names":["useParams","Outlet","Link","Fragment","HighlitedQuote","DUMMY_QUOTES","id","author","text","QuoteDetail","props","params","quote","find","quoteId"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,IAA5B,QAAwC,kBAAxC;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAOC,cAAP,MAA2B,uCAA3B;;AAEA,MAAMC,YAAY,GAAG,CACnB;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,MAApB;AAA4BC,EAAAA,IAAI,EAAE;AAAlC,CADmB,EAEnB;AAAEF,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,OAApB;AAA6BC,EAAAA,IAAI,EAAE;AAAnC,CAFmB,EAGnB;AAAEF,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,KAApB;AAA2BC,EAAAA,IAAI,EAAE;AAAjC,CAHmB,CAArB;;AAMA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,MAAM,GAAGX,SAAS,EAAxB;AAEA,QAAMY,KAAK,GAAGP,YAAY,CAACQ,IAAb,CAAmBD,KAAD,IAAWA,KAAK,CAACN,EAAN,KAAaK,MAAM,CAACG,OAAjD,CAAd;;AAEA,MAAI,CAACF,KAAL,EAAY;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAEA,KAAK,CAACJ,IAA5B;AAAkC,MAAA,MAAM,EAAEI,KAAK,CAACL;AAAhD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAME,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAnBD;;GAAME,W;UACWT,S;;;KADXS,W;AAqBN,eAAeA,WAAf","sourcesContent":["import { useParams, Outlet, Link } from \"react-router-dom\";\r\nimport { Fragment } from \"react\";\r\n\r\nimport HighlitedQuote from \"../components/quotes/HighlightedQuote\";\r\n\r\nconst DUMMY_QUOTES = [\r\n  { id: \"q1\", author: \"Bory\", text: \"Learning React is fun!\" },\r\n  { id: \"q2\", author: \"Jeong\", text: \"Learning React is great!\" },\r\n  { id: \"q3\", author: \"Max\", text: \"Learning React is enjoyable!\" }\r\n];\r\n\r\nconst QuoteDetail = (props) => {\r\n  const params = useParams();\r\n\r\n  const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\r\n\r\n  if (!quote) {\r\n    return <p>No quote found!</p>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <HighlitedQuote text={quote.text} author={quote.author} />\r\n      <div className=\"centered\">\r\n        <Link></Link>\r\n      </div>\r\n\r\n      <Outlet />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n"]},"metadata":{},"sourceType":"module"}