{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jeong\\\\Desktop\\\\Today-I-learned\\\\react\\\\handlingForms-userInput\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [formIsValid, setFormIsValid] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const nameInputIsValid = !enteredNameIsValid && enteredNameTouched;\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid(false);\n    }\n  }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n\n  const formSubmissonHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName); // nameInputRef.current.value = \"\";\n\n    setEnteredName(\"\");\n    setEnteredNameTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsValid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissonHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), nameInputIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"5vT777S/ZiJ1o4AjyUtAp2KcXt0=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/Jeong/Desktop/Today-I-learned/react/handlingForms-userInput/src/components/SimpleInput.js"],"names":["useEffect","useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","formIsValid","setFormIsValid","enteredNameIsValid","trim","nameInputIsValid","nameInputChangeHandler","event","target","value","nameInputBlurHandler","formSubmissonHandler","preventDefault","console","log","nameInputClasses"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACK,kBAAD,EAAqBC,qBAArB,IAA8CN,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAMS,kBAAkB,GAAGN,WAAW,CAACO,IAAZ,OAAuB,EAAlD;AAEA,QAAMC,gBAAgB,GAAG,CAACF,kBAAD,IAAuBJ,kBAAhD;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,kBAAJ,EAAwB;AACtBD,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KAFD,MAEO;AACLA,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF,GANQ,EAMN,CAACC,kBAAD,CANM,CAAT;;AAQA,QAAMG,sBAAsB,GAAIC,KAAD,IAAW;AACxCT,IAAAA,cAAc,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAIA,QAAMC,oBAAoB,GAAIH,KAAD,IAAW;AACtCP,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,GAFD;;AAIA,QAAMW,oBAAoB,GAAIJ,KAAD,IAAW;AACtCA,IAAAA,KAAK,CAACK,cAAN;AAEAZ,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AAEA,QAAI,CAACG,kBAAL,EAAyB;AACvB;AACD;;AAEDU,IAAAA,OAAO,CAACC,GAAR,CAAYjB,WAAZ,EATsC,CAWtC;;AACAC,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD,GAdD;;AAgBA,QAAMe,gBAAgB,GAAGV,gBAAgB,GAAG,sBAAH,GAA4B,cAArE;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEM,oBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEI,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,QAAQ,EAAET,sBAAvC;AAA+D,QAAA,MAAM,EAAEI,oBAAvE;AAA6F,QAAA,KAAK,EAAEb;AAApG;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGQ,gBAAgB,iBAAI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHvB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAvDD;;GAAMV,W;;KAAAA,W;AAyDN,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n\n  const nameInputIsValid = !enteredNameIsValid && enteredNameTouched;\n\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid(false);\n    }\n  }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = (event) => {\n    setEnteredNameTouched(true);\n  };\n\n  const formSubmissonHandler = (event) => {\n    event.preventDefault();\n\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n\n    // nameInputRef.current.value = \"\";\n    setEnteredName(\"\");\n    setEnteredNameTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsValid ? \"form-control invalid\" : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmissonHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input type=\"text\" id=\"name\" onChange={nameInputChangeHandler} onBlur={nameInputBlurHandler} value={enteredName} />\n        {nameInputIsValid && <p className=\"error-text\">Name must not be empty.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}