{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jeong\\\\Desktop\\\\Today-I-learned\\\\customhook-realistic-example\\\\src\\\\components\\\\NewTask\\\\NewTask.js\",\n    _s = $RefreshSig$();\n\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    sendRequest: sendTaskRequest\n  } = useHttp();\n\n  const createdTask = (taskText, taskData) => {\n    const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n\n    const createdTask = {\n      id: generatedId,\n      text: taskText\n    };\n    props.onAddTask(createdTask);\n  };\n\n  const enterTaskHandler = async taskText => {\n    sendTaskRequest({\n      url: \"https://react-http-6d8d9-default-rtdb.firebaseio.com/tasks.json\",\n      method: \"Post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: {\n        text: taskText\n      }\n    }, createdTask.bind());\n    return /*#__PURE__*/_jsxDEV(Section, {\n      children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n        onEnterTask: enterTaskHandler,\n        loading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  };\n};\n\n_s(NewTask, \"e+CZgtYWzn/WEePX8yQWKpC3/rg=\", false, function () {\n  return [useHttp];\n});\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["C:/Users/Jeong/Desktop/Today-I-learned/customhook-realistic-example/src/components/NewTask/NewTask.js"],"names":["Section","TaskForm","useHttp","NewTask","props","isLoading","error","sendRequest","sendTaskRequest","createdTask","taskText","taskData","generatedId","name","id","text","onAddTask","enterTaskHandler","url","method","headers","body","bind"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,WAAW,EAAEC;AAAjC,MAAqDN,OAAO,EAAlE;;AAEA,QAAMO,WAAW,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC1C,UAAMC,WAAW,GAAGD,QAAQ,CAACE,IAA7B,CAD0C,CACP;;AACnC,UAAMJ,WAAW,GAAG;AAAEK,MAAAA,EAAE,EAAEF,WAAN;AAAmBG,MAAAA,IAAI,EAAEL;AAAzB,KAApB;AAEAN,IAAAA,KAAK,CAACY,SAAN,CAAgBP,WAAhB;AACD,GALD;;AAOA,QAAMQ,gBAAgB,GAAG,MAAOP,QAAP,IAAoB;AAC3CF,IAAAA,eAAe,CACb;AACEU,MAAAA,GAAG,EAAE,iEADP;AAEEC,MAAAA,MAAM,EAAE,MAFV;AAGEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHX;AAMEC,MAAAA,IAAI,EAAE;AAAEN,QAAAA,IAAI,EAAEL;AAAR;AANR,KADa,EASbD,WAAW,CAACa,IAAZ,EATa,CAAf;AAYA,wBACE,QAAC,OAAD;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,WAAW,EAAEL,gBAAvB;AAAyC,QAAA,OAAO,EAAEZ;AAAlD;AAAA;AAAA;AAAA;AAAA,cADF,EAEGC,KAAK,iBAAI;AAAA,kBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAnBD;AAoBD,CA9BD;;GAAMH,O;UACuDD,O;;;KADvDC,O;AA+BN,eAAeA,OAAf","sourcesContent":["import Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../../hooks/use-http\";\n\nconst NewTask = (props) => {\n  const { isLoading, error, sendRequest: sendTaskRequest } = useHttp();\n\n  const createdTask = (taskText, taskData) => {\n    const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = { id: generatedId, text: taskText };\n\n    props.onAddTask(createdTask);\n  };\n\n  const enterTaskHandler = async (taskText) => {\n    sendTaskRequest(\n      {\n        url: \"https://react-http-6d8d9-default-rtdb.firebaseio.com/tasks.json\",\n        method: \"Post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: { text: taskText }\n      },\n      createdTask.bind()\n    );\n\n    return (\n      <Section>\n        <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n        {error && <p>{error}</p>}\n      </Section>\n    );\n  };\n};\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}