{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jeong\\\\Desktop\\\\Today-I-learned\\\\customhook-realistic-example\\\\src\\\\components\\\\NewTask\\\\NewTask.js\",\n    _s2 = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const enterTaskHandler = async taskText => {\n    _s();\n\n    const {\n      isLoading,\n      error,\n      sendRequest: sendRequest\n    } = useHttp();\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\"https://react-http-6d8d9-default-rtdb.firebaseio.com/tasks.json\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          text: taskText\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n\n      const createdTask = {\n        id: generatedId,\n        text: taskText\n      };\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n\n    setIsLoading(false);\n  };\n\n  _s(enterTaskHandler, \"X+pQBxmZi1lt8oTFNka9uZEv778=\", false, function () {\n    return [useHttp];\n  });\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(NewTask, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["C:/Users/Jeong/Desktop/Today-I-learned/customhook-realistic-example/src/components/NewTask/NewTask.js"],"names":["useState","Section","TaskForm","useHttp","NewTask","props","isLoading","setIsLoading","error","setError","enterTaskHandler","taskText","sendRequest","response","fetch","method","body","JSON","stringify","text","headers","ok","Error","data","json","generatedId","name","createdTask","id","onAddTask","err","message"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAAA;;AACzB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMU,gBAAgB,GAAG,MAAOC,QAAP,IAAoB;AAAA;;AAC3C,UAAM;AAAEL,MAAAA,SAAF;AAAaE,MAAAA,KAAb;AAAoBI,MAAAA,WAAW,EAAEA;AAAjC,QAAiDT,OAAO,EAA9D;AACAI,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,iEAAD,EAAoE;AAC9FC,QAAAA,MAAM,EAAE,MADsF;AAE9FC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,IAAI,EAAER;AAAR,SAAf,CAFwF;AAG9FS,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHqF,OAApE,CAA5B;;AAQA,UAAI,CAACP,QAAQ,CAACQ,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;AAEA,YAAMC,WAAW,GAAGF,IAAI,CAACG,IAAzB,CAfE,CAe6B;;AAC/B,YAAMC,WAAW,GAAG;AAAEC,QAAAA,EAAE,EAAEH,WAAN;AAAmBN,QAAAA,IAAI,EAAER;AAAzB,OAApB;AAEAN,MAAAA,KAAK,CAACwB,SAAN,CAAgBF,WAAhB;AACD,KAnBD,CAmBE,OAAOG,GAAP,EAAY;AACZrB,MAAAA,QAAQ,CAACqB,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACD;;AACDxB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GA3BD;;AAJyB,KAInBG,gBAJmB;AAAA,YAKgCP,OALhC;AAAA;;AAiCzB,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,WAAW,EAAEO,gBAAvB;AAAyC,MAAA,OAAO,EAAEJ;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,KAAK,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAvCD;;IAAMJ,O;;KAAAA,O;AAyCN,eAAeA,OAAf","sourcesContent":["import { useState } from \"react\";\n\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../../hooks/use-http\";\n\nconst NewTask = (props) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const enterTaskHandler = async (taskText) => {\n    const { isLoading, error, sendRequest: sendRequest } = useHttp();\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://react-http-6d8d9-default-rtdb.firebaseio.com/tasks.json\", {\n        method: \"POST\",\n        body: JSON.stringify({ text: taskText }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = { id: generatedId, text: taskText };\n\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}