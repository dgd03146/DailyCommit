{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n\n    toggleCounter() {}\n\n  }\n});\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.value,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"toggle\") {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["C:/Users/Jeong/Desktop/Today-I-learned/react/redux-basic-counter/src/store/index.js"],"names":["createStore","createSlice","initialState","counter","showCounter","name","reducers","increment","state","decrement","increase","action","amount","toggleCounter","counterReducer","type","value","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAArB;AAEAH,WAAW,CAAC;AACVI,EAAAA,IAAI,EAAE,SADI;AAEVH,EAAAA,YAFU;AAGVI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACL,OAAN;AACD,KAHO;;AAIRM,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACL,OAAN;AACD,KANO;;AAORO,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACtBH,MAAAA,KAAK,CAACL,OAAN,GAAgBK,KAAK,CAACL,OAAN,GAAgBQ,MAAM,CAACC,MAAvC;AACD,KATO;;AAURC,IAAAA,aAAa,GAAG,CAAE;;AAVV;AAHA,CAAD,CAAX;;AAiBA,MAAMC,cAAc,GAAG,YAAkC;AAAA,MAAjCN,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXS,MAAW;;AACvD,MAAIA,MAAM,CAACI,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO;AAAEZ,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CAA3B;AAA8BC,MAAAA,WAAW,EAAEI,KAAK,CAACJ;AAAjD,KAAP;AACD;;AAED,MAAIO,MAAM,CAACI,IAAP,KAAgB,UAApB,EAAgC;AAC9B,WAAO;AAAEZ,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgBQ,MAAM,CAACK,KAAlC;AAAyCZ,MAAAA,WAAW,EAAEI,KAAK,CAACJ;AAA5D,KAAP;AACD;;AAED,MAAIO,MAAM,CAACI,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO;AAAEZ,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CAA3B;AAA8BC,MAAAA,WAAW,EAAEI,KAAK,CAACJ;AAAjD,KAAP;AACD;;AAED,MAAIO,MAAM,CAACI,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO;AAAEX,MAAAA,WAAW,EAAE,CAACI,KAAK,CAACJ,WAAtB;AAAmCD,MAAAA,OAAO,EAAEK,KAAK,CAACL;AAAlD,KAAP;AACD;;AAED,SAAOK,KAAP;AACD,CAlBD;;AAoBA,MAAMS,KAAK,GAAGjB,WAAW,CAACc,cAAD,CAAzB;AAEA,eAAeG,KAAf","sourcesContent":["import { createStore } from \"redux\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = { counter: 0, showCounter: true };\r\n\r\ncreateSlice({\r\n  name: \"counter\",\r\n  initialState,\r\n  reducers: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    increase(state, action) {\r\n      state.counter = state.counter + action.amount;\r\n    },\r\n    toggleCounter() {}\r\n  }\r\n});\r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n  if (action.type === \"increment\") {\r\n    return { counter: state.counter + 1, showCounter: state.showCounter };\r\n  }\r\n\r\n  if (action.type === \"increase\") {\r\n    return { counter: state.counter + action.value, showCounter: state.showCounter };\r\n  }\r\n\r\n  if (action.type === \"decrement\") {\r\n    return { counter: state.counter - 1, showCounter: state.showCounter };\r\n  }\r\n\r\n  if (action.type === \"toggle\") {\r\n    return { showCounter: !state.showCounter, counter: state.counter };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}