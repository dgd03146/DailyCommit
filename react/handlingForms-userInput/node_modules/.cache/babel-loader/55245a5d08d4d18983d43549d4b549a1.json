{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jeong\\\\Desktop\\\\Today-I-learned\\\\react\\\\handlingForms-userInput\\\\src\\\\components\\\\BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport useInput2 from \"./hooks/use-input2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isNotEmpty = value => value.trim() !== \"\";\n\nconst isEmail = value => value.includes(\"@\");\n\nconst BasicForm = props => {\n  _s();\n\n  const {\n    value: firstNameValue,\n    isValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    nameInputBluerHandler: firstNameBlurHandler,\n    reset: resetFirstName\n  } = useInput2(isNotEmpty);\n  const {\n    value: lastNameValue,\n    isValid: lastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    nameInputBluerHandler: lastNameBlurHandler,\n    reset: resetLastName\n  } = useInput2(isNotEmpty);\n  const {\n    value: emailValue,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    nameInputBluerHandler: emailBlurHandler,\n    reset: resetEmail\n  } = useInput2(isEmail);\n  let formIsValid = false;\n\n  if (firstNameIsValid) {\n    formIsValid = true;\n  } else {\n    formIsValid = false;\n  }\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (!firstNameIsValid) {\n      return;\n    }\n\n    console.log(firstNameValue);\n    resetFirstName();\n  };\n\n  const firstNameClasses = firstNameHasError ? \"form-control invalid\" : \"form-control\";\n  const lastNameClasses = lastNameHasError ? \"form-control invalid\" : \"form-control\";\n  const emailClasses = emailHasError ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: firstNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: firstNameChangeHandler,\n          onBlur: firstNameBlurHandler,\n          value: firstNameValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), firstNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Please enter a first name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: lastNameChangeHandler,\n          onBlur: lastNameBlurHandler,\n          value: lastNameValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), lastNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Please enter a last name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler,\n        value: emailValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"56Ze0seDjStZR3PdMo7wZkIZJWs=\", false, function () {\n  return [useInput2, useInput2, useInput2];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["C:/Users/Jeong/Desktop/Today-I-learned/react/handlingForms-userInput/src/components/BasicForm.js"],"names":["useState","useInput2","isNotEmpty","value","trim","isEmail","includes","BasicForm","props","firstNameValue","isValid","firstNameIsValid","hasError","firstNameHasError","valueChangeHandler","firstNameChangeHandler","nameInputBluerHandler","firstNameBlurHandler","reset","resetFirstName","lastNameValue","lastNameIsValid","lastNameHasError","lastNameChangeHandler","lastNameBlurHandler","resetLastName","emailValue","emailIsValid","emailHasError","emailChangeHandler","emailBlurHandler","resetEmail","formIsValid","formSubmitHandler","event","preventDefault","console","log","firstNameClasses","lastNameClasses","emailClasses"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport useInput2 from \"./hooks/use-input2\";\n\nconst isNotEmpty = (value) => value.trim() !== \"\";\nconst isEmail = (value) => value.includes(\"@\");\n\nconst BasicForm = (props) => {\n  const {\n    value: firstNameValue,\n    isValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    nameInputBluerHandler: firstNameBlurHandler,\n    reset: resetFirstName\n  } = useInput2(isNotEmpty);\n\n  const {\n    value: lastNameValue,\n    isValid: lastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    nameInputBluerHandler: lastNameBlurHandler,\n    reset: resetLastName\n  } = useInput2(isNotEmpty);\n\n  const {\n    value: emailValue,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    nameInputBluerHandler: emailBlurHandler,\n    reset: resetEmail\n  } = useInput2(isEmail);\n\n  let formIsValid = false;\n\n  if (firstNameIsValid) {\n    formIsValid = true;\n  } else {\n    formIsValid = false;\n  }\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n\n    if (!firstNameIsValid) {\n      return;\n    }\n\n    console.log(firstNameValue);\n\n    resetFirstName();\n  };\n\n  const firstNameClasses = firstNameHasError ? \"form-control invalid\" : \"form-control\";\n  const lastNameClasses = lastNameHasError ? \"form-control invalid\" : \"form-control\";\n  const emailClasses = emailHasError ? \"form-control invalid\" : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className=\"control-group\">\n        <div className={firstNameClasses}>\n          <label htmlFor=\"name\">First Name</label>\n          <input type=\"text\" id=\"name\" onChange={firstNameChangeHandler} onBlur={firstNameBlurHandler} value={firstNameValue} />\n          {firstNameHasError && <p className=\"error-text\">Please enter a first name</p>}\n        </div>\n        <div className={lastNameClasses}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input type=\"text\" id=\"name\" onChange={lastNameChangeHandler} onBlur={lastNameBlurHandler} value={lastNameValue} />\n          {lastNameHasError && <p className=\"error-text\">Please enter a last name</p>}\n        </div>\n      </div>\n      <div className={emailClasses}>\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input type=\"email\" id=\"email\" onChange={emailChangeHandler} onBlur={emailBlurHandler} value={emailValue} />\n        {emailHasError && <p className=\"error-text\">Name must not be empty</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}